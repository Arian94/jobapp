{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/center.service.ts","./src/app/edu-information/edu-information.component.ts","./src/app/edu-information/edu-information.component.html","./src/app/init-information/init-information.component.ts","./src/app/init-information/init-information.component.html","./src/app/upload-docs/upload-docs.component.ts","./src/app/upload-docs/upload-docs.component.html","./src/app/upload.service.ts","./src/app/work-information/work-information.component.ts","./src/app/work-information/work-information.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InitInformationComponent } from './init-information/init-information.component';\nimport { EduInformationComponent } from './edu-information/edu-information.component';\n\n\nconst routes: Routes = [\n  // { path: '', redirectTo: '/init', pathMatch: 'full' },\n  // { path: 'init', component: InitInformationComponent },\n  // { path: 'edu', component: EduInformationComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\n\nimport { CenterService } from './center.service';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [\n        {\n            provide: STEPPER_GLOBAL_OPTIONS,\n            useValue: {\n                displayDefaultIndicatorType: false,\n                // showError:true\n            },\n        },\n    ],\n})\nexport class AppComponent {\n    title = 'Job application';\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        public all: CenterService\n    ) { }\n\n    ngOnInit(): void {}\n\n    ngAfterViewInit(): void {\n        this.cdr.detectChanges();\n    }\n}\n","<h3>{{ title }}</h3>\n\n<mat-horizontal-stepper linear labelPosition='bottom'>\n    <mat-step\n        label=\"Personal Information\"\n        [stepControl] = \"all.allForm.get('init_info')\"\n    >\n        <app-init-information></app-init-information>\n        <!-- <router-outlet></router-outlet> -->\n    </mat-step>\n    <mat-step label=\"Educational History\" [stepControl] = \"all.allForm.get('edu_info')\">\n        <app-edu-information></app-edu-information>\n    </mat-step>\n    <mat-step label=\"Work History\" [stepControl] = \"all.allForm.get('work_info')\">\n        <app-work-information></app-work-information>\n    </mat-step>\n    <mat-step label=\"Upload Documents\" [stepControl] = \"all.allForm.get('upload_docs')\">\n        <app-upload-docs></app-upload-docs>\n    </mat-step>\n</mat-horizontal-stepper>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { InitInformationComponent } from './init-information/init-information.component';\nimport { EduInformationComponent } from './edu-information/edu-information.component';\nimport { WorkInformationComponent } from './work-information/work-information.component';\nimport { UploadDocsComponent } from './upload-docs/upload-docs.component';\n\nimport { CenterService } from './center.service';\nimport { UploadService } from './upload.service';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\n@NgModule({\n    declarations: [\n        AppComponent,\n        InitInformationComponent,\n        EduInformationComponent,\n        WorkInformationComponent,\n        UploadDocsComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        MatStepperModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatCardModule,\n        MatInputModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatTableModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig, 'job-app'),\n        AngularFireDatabaseModule\n    ],\n    exports: [\n        MatCardModule,\n        MatInputModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatTableModule,\n    ],\n    providers: [CenterService, UploadService],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\n    \nexport class CenterService {\n    // private init_infoSource: Subject<FormGroup> = new Subject();\n    // init_info: Observable<FormGroup> = this.init_infoSource.asObservable();\n\n    // private edu_infoSource: Subject<FormGroup> = new Subject();\n    // edu_info: Observable<FormGroup> = this.edu_infoSource.asObservable();\n\n    // init_info: FormGroup;\n\n\n    constructor(private fb: FormBuilder) {\n        // this.init_info.subscribe((form) =>\n        //     form.valueChanges.subscribe((val) => {\n        //         this.allForm.value.firstName = val.firstName;\n        //         this.allForm.value.lastName = val.lastName;\n        //         this.allForm.value.NINumber = val.NINumber;\n        //     })\n        // );\n        // this.edu_info.subscribe((form) =>\n        //     form.valueChanges.subscribe((val) => {\n        //         // console.log(val)\n        //         this.allForm.value.degree = val.degree;\n        //         this.allForm.value.university = val.university;\n        //     })\n        // );\n    }\n\n\n    allForm: FormGroup = this.fb.group({});\n\n\n\n    // stepReady(form: FormGroup, part: any) {\n    //     switch (part) {\n    //         case 'init': {\n    //             this.init_infoSource.next(form);\n    //         }\n    //         case 'edu': {\n    //             this.edu_infoSource.next(form);\n    //         }\n    //     }\n    // }   \n}","import { Component, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\n\nimport { CenterService } from '../center.service';\nimport { UploadService } from '../upload.service'\n\n@Component({\n    selector: 'app-edu-information',\n    templateUrl: './edu-information.component.html',\n    styleUrls: ['./edu-information.component.css'],\n})\nexport class EduInformationComponent implements OnInit {\n    constructor(private fb: FormBuilder, private edu: CenterService,\n        private uploadService: UploadService) { }\n\n    \n    edu_info: FormArray;\n    allForm: FormGroup;\n\n    ngOnInit(): void {\n        this.edu_info = this.fb.array([this.createQual()]);\n        this.edu.allForm.addControl('edu_info', this.edu_info);\n        this.allForm = this.edu.allForm as FormGroup;\n        // this.edu_info.valueChanges.subscribe(newval => console.log(newval));\n    }\n\n    upd: FormArray;\n    addQual() {\n        this.edu_info.push(this.createQual());\n        this.upd = this.edu.allForm.get(['upload_docs', 'degreeDocs']) as FormArray;\n        this.upd.push(\n            this.fb.group({\n                docs: [null, Validators.required]\n            })\n        );\n        this.uploadService.files3.push(''); // files3 has to have null values coz when we splice (replace) or push a not-null value at a certain index into it, \n                                            // it would be able to replace the nulls with the values or push the values after the nulls.\n                                            // If we don't push or splice (line 45) nulls in here, splicing or pushing not-null values will be done at the first index of 'files3' and\n                                            // this is not what we want.\n        this.uploadService.size3.push(0);\n    }\n\n    removeQual(i: number) {\n        this.edu_info.removeAt(i);\n        this.upd.removeAt(i);\n        this.uploadService.files3.splice(i, 1);\n        this.uploadService.size3.splice(i, 1);\n    }\n\n    public createQual(): FormGroup {\n        return this.fb.group({\n            level: ['', Validators.required],\n            degree: ['',\n                [Validators.required, Validators.maxLength(100)]],\n            university: ['', Validators.required],\n            startDate: ['', Validators.required], // 2019-09-10\n            endDate: ['', Validators.required]\n        })\n    }\n}\n","<form [formGroup]=\"allForm\">\n    <h5>Enter your university degrees (at least one degree is required):</h5>\n    <hr width=\"500px\" align=\"left\"/>\n    <div formArrayName='edu_info'>\n        <div\n            *ngFor=\"\n                let deg_unis of edu_info['controls'];\n                let i = index\n            \"\n            [formGroupName]=\"i\"\n        >\n            <div>\n                <h6 *ngIf=\"i==0; else nextQual\">Your latest qualification:</h6>\n                <mat-form-field>\n                    <mat-label>Level:</mat-label>\n                    <mat-select formControlName=\"level\" required>\n                        <mat-option value=\"BEng\">Bachelor of Engineering (BEng)</mat-option>\n                        <mat-option value=\"MEng\">Master of Engineering (MEng)</mat-option>\n                        <mat-option value=\"BSc\">Bachelor of Science (BSc)</mat-option>\n                        <mat-option value=\"MSc/MA\">Master of Science/Arts (MSc/MA)</mat-option>\n                        <mat-option value=\"PhD\">Doctor of Philosophy (PhD)</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"scndry deg\">\n                    <mat-label>Degree:</mat-label>\n                    <input matInput formControlName=\"degree\" required />\n                </mat-form-field>\n            </div>\n\n            <ng-template #nextQual>\n                <hr width=\"500px\" align=\"left\"/>\n                <h6 #nextDegree>Next qualification:</h6>\n            </ng-template>\n\n            <div>\n                <mat-form-field class=\"uni\">\n                    <mat-label>University:</mat-label>\n                    <input matInput formControlName=\"university\" required />\n                </mat-form-field>\n            </div>\n\n            <mat-form-field>\n                <mat-label>From:</mat-label>\n                <input\n                    matInput\n                    type=\"date\"\n                    formControlName=\"startDate\"\n                    required\n                />\n            </mat-form-field>\n\n            <mat-form-field class=\"scndry\">\n                <mat-label>To:</mat-label>\n                <input\n                    matInput\n                    type=\"date\"\n                    formControlName=\"endDate\"\n                    required\n                />\n            </mat-form-field>\n    \n            <div *ngIf='i!==0'>\n                <button\n                    mat-stroked-button\n                    matStepper\n                    (click)=\"removeQual(i)\"\n                    color='accent'\n                >\n                    - Remove qualification\n                </button>\n            </div>\n        </div>\n\n        <div>\n            <button\n                mat-stroked-button\n                matStepper\n                (click)=\"addQual()\"\n                color='primary'\n            >\n                + Add qualification\n            </button>\n        </div>\n\n        <div>\n            <button\n                mat-raised-button\n                matStepperPrevious color='accent'\n            >\n                Back\n            </button>\n            <button mat-raised-button matStepperNext color='primary'>\n                Next\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CenterService } from '../center.service'\n\n\n@Component({\n    selector: 'app-init-information',\n    templateUrl: './init-information.component.html',\n    styleUrls: ['./init-information.component.css'],\n})\nexport class InitInformationComponent implements OnInit {\n    constructor(private fb: FormBuilder, private init: CenterService) { }\n\n    init_info: FormGroup;\n\n    ngOnInit(): void {\n        this.init_info = this.fb.group({\n            gender: [''],\n            firstName: [\n                '', [\n                    Validators.required,\n                    Validators.maxLength(40)]\n                // Validators.pattern('A-Za-z')\n            ],\n            lastName: ['', Validators.required],\n            NINumber: ['', Validators.required],\n            dob: ['', Validators.required], // 1994-10-07\n            ethnic: [''],\n            maritalStatus: [''],\n            // ethnic, marital,\n            email: ['', [Validators.required, Validators.email]]\n            // let emailRegex = \"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\";\n        });\n        this.init.allForm.addControl('init_info', this.init_info);\n        // this.init_info.valueChanges.subscribe(newval => console.log(newval));\n    }\n\n    getErrorMessage() {\n        if (this.init_info.controls['email'].hasError('required')) {\n            return 'You must enter a value';\n        }\n        return this.init_info.controls['email'].hasError('email') ? 'Not a valid email' : '';\n    }\n}\n\n","<form [formGroup]=\"init_info\" class=\"mat-form-field-outline-thick\">\n    <section>\n        <mat-form-field>\n            <mat-label>Gender:</mat-label>\n            <mat-select id=\"gender\" formControlName=\"gender\" required>\n                <mat-option value=\"male\">Male</mat-option>\n                <mat-option value=\"female\">Female</mat-option>\n                <mat-option value=\"trans\">Trans</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"scndry\">\n            <mat-label>First name:</mat-label>\n            <input\n                matInput\n                formControlName=\"firstName\"\n                required\n                maxlength=\"40\"\n                pattern=\"[A-Za-z]{1,}\"\n            />\n        </mat-form-field>\n\n        <mat-form-field class=\"scndry\">\n            <mat-label>Last name:</mat-label>\n            <input\n                matInput\n                formControlName=\"lastName\"\n                required\n                maxlength=\"40\"\n                pattern=\"[A-Za-z]{1,}\"\n            />\n        </mat-form-field>\n    </section>\n\n    <section>\n        <mat-form-field>\n            <mat-label>Date of Birth:</mat-label>\n            <input matInput type=\"date\" formControlName=\"dob\" required />\n        </mat-form-field>\n\n        <mat-form-field class=\"scndry\">\n            <mat-label>Ethnic:</mat-label>\n            <mat-select id=\"ethnic\" formControlName=\"ethnic\">\n                <mat-option value=\"white\">White</mat-option>\n                <mat-option value=\"black\">Black</mat-option>\n                <mat-option value=\"asian\">Asian</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"scndry\">\n            <mat-label>Marital status:</mat-label>\n            <mat-select id=\"marital-status\" formControlName=\"maritalStatus\">\n                <mat-option value=\"single\">Single</mat-option>\n                <mat-option value=\"married\">Married</mat-option>\n                <mat-option value=\"divorced (no kids)\"\n                    >Divorced (no kids)</mat-option\n                >\n                <mat-option value=\"divorced (have kids)\"\n                    >Divorced (have kids)</mat-option\n                >\n            </mat-select>\n        </mat-form-field>\n    </section>\n\n    <section>\n        <mat-form-field class=\"ninumber\">\n            <mat-label>National Identity Number:</mat-label>\n            <input\n                matInput\n                formControlName=\"NINumber\"\n                required\n                pattern=\"[0-9]{3,}\"\n            />\n        </mat-form-field>\n\n        <mat-form-field class=\"scndry email\">\n            <mat-label>Email address:</mat-label>\n            <input matInput formControlName=\"email\" required />\n            <mat-error *ngIf=\"init_info.controls['email'].invalid\">{{\n                getErrorMessage()\n            }}</mat-error>\n        </mat-form-field>\n    </section>\n\n    <div>\n        <button mat-raised-button matStepperNext color=\"primary\">\n            Next\n        </button>\n    </div>\n</form>","import { Component, OnInit, Inject, ViewChild, ChangeDetectorRef, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { HttpClient, HttpResponse, HttpRequest, HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { catchError, last, map, tap } from 'rxjs/operators';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { Subscription, of, asyncScheduler } from 'rxjs';\n\nimport { CenterService } from '../center.service';\nimport { UploadService } from '../upload.service';\n\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-upload-docs',\n    templateUrl: './upload-docs.component.html',\n    styleUrls: ['./upload-docs.component.css'],\n})\nexport class UploadDocsComponent implements OnInit {\n    constructor(\n        private fb: FormBuilder,\n        private httpClient: HttpClient,\n        public upload: CenterService, private uploadService: UploadService,\n        public dialog: MatDialog,\n        private firestore: AngularFirestore,\n        private router: Router\n    ) { }\n\n    URL = 'http://localhost:8000/upload.php';\n    files: string[] = [];\n    files2: string[] = [];\n    // files3 is in uploadService\n    files4: string[] = [];\n\n    @ViewChild('checkTermsCons') checkTermsCons: MatCheckboxModule;\n\n    edu_info = this.upload.allForm.get('edu_info') as FormArray;\n    upload_docs: FormGroup;\n\n    ngOnInit(): void {\n        this.upload_docs = this.fb.group({\n            cv: [null, Validators.required],\n            coverLetter: [null],\n            degreeDocs: this.fb.array([\n                this.fb.group({\n                    docs: [null, Validators.required],\n                }),\n            ]),\n            other: [null],\n        });\n        this.upload.allForm.addControl('upload_docs', this.upload_docs);\n        // this.upload_docs.valueChanges.subscribe(newval => console.log(newval));\n    }\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    size: number;\n    onFileChange(event: { target: { files: string | any[]; }; }) {\n        this.size = event.target.files[0].size;\n        if (this.size > (2e6)) {\n            this.upload_docs.get('cv').setValue('');\n        } else {\n            this.files.splice(0, 1, event.target.files[0]); // splice: index, how many to delete?, what to insert?\n        }\n    }\n\n    size2: number;\n    onFileChange2(event: { target: { files: string | any[]; }; }) {\n        this.size2 = event.target.files[0].size;\n        if (this.size2 > (2e6)) {\n            this.upload_docs.get('coverLetter').setValue('');\n            this.coverLetter_cancel = true;\n        } else {\n            this.files2.splice(0, 1, event.target.files[0]);\n            this.coverLetter_cancel = false;\n        }\n    }\n\n    // onFileChange3 is in uploadService\n\n    size4: number;\n    onFileChange4(event: { target: { files: string | any[]; }; }) {\n        this.files4.splice(0);\n        for (var i = 0; i < event.target.files.length; i++) {\n            this.size4 = event.target.files[i].size;\n            if (this.size4 > (2e6)) {\n                this.upload_docs.get('other').setValue('');\n                this.files4.splice(0);\n                this.cancel = true;\n            } else {\n                this.files4.push(event.target.files[i]);\n                this.cancel = false;\n            }\n        }\n    }\n\n    termsCons(): void {\n        const dialogRef = this.dialog.open(termsConsDialog, {\n            width: '500px',\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            console.log('The dialog was closed');\n        });\n    }\n\n    names: string = '';\n    fileEvent(event: { target: { files: any[]; }; }) {   // for 'other' form control.\n        this.names = '';\n        let fileNames = event.target.files;\n        Array.from(fileNames).forEach(file => {\n            this.names = `${this.names} ${file.name}`;\n        })\n    }\n\n    coverLetter_cancel: boolean = true;\n    coverLetterCancel() {\n        this.coverLetter_cancel = true;\n        this.upload_docs.get('coverLetter').reset();\n        this.files2.pop();\n    }\n\n    cancel: boolean = true;\n    otherCancel() {\n        this.cancel = true;\n        this.upload_docs.get('other').reset();\n        this.names = '';\n        this.files4.splice(0);\n    }\n\n    color: string;\n    agreement(col: string) {\n        col['checked'] ? this.color = 'green' : this.color = 'black';\n    }\n\n    submitForm() {\n        if (this.checkTermsCons['checked'] == false) { this.color = 'red'; return null; }\n        if (this.upload_docs.valid\n            // !this.upload_docs.get('cv').hasError('required') &&\n            // this.upload_docs.get('degreeDocs').status == 'VALID'\n        ) {\n            this.files2.forEach(file => {\n                this.files.push(file);\n            })\n\n            this.uploadService.files3.forEach(file => {\n                this.files.push(file);\n            })\n\n            this.files4.forEach(file => {\n                this.files.push(file);\n            })\n\n            // console.log(this.upload.allForm.value);\n            const formObj = {\n                Applicants: [\n                    this.upload.allForm.value,\n                    `Other documents names:${this.names}`,\n                    \"Application submitted at time:\",\n                    new Date()\n                ]\n            };\n            // this.httpClient\n            //     .post('http://localhost:3000/forms', formObj)\n            //     .subscribe(\n            //         (response) => console.log('repsonse ', response),\n            //         (error) => console.log(error)\n            //     );\n\n            this.firestore.collection('job-app').add(formObj);\n            alert('Files uploaded Successfully!');\n            asyncScheduler.schedule(() => {\n                return window.location.href = 'https://www.google.com';\n            }, 2000\n            )\n\n            const formData = new FormData();\n            for (var i = 0; i < this.files.length; i++) {\n                formData.append('file[]', this.files[i]);\n            }\n\n            // this.httpClient\n            //     .post(this.URL, formData)\n            //     .subscribe((res) => {\n            //         console.log(res);\n            //         alert('Files uploaded Successfully!');\n            //     });\n            this.upload.allForm.reset();\n        }\n    }\n}\n\n@Component({\n    selector: 'dialog-overview-example-dialog',\n    template: `<div>\n        <p>Agree with the terms and conditions.</p>\n    </div>`,\n})\nexport class termsConsDialog { }\n","<form [formGroup]=\"upload_docs\" (ngSubmit)=\"submitForm()\">\n    <h5>\n        Upload your documents (Maximum size for each file is 2MB and only doc,\n        docx, pdf and image files are allowed).\n    </h5>\n    <div>\n        <mat-form-field class=\"file\">\n            <mat-label>CV:</mat-label>\n            <input\n                matInput\n                class=\"file-names\"\n                [value]=\"upload_docs.get('cv').value\"\n                readonly\n                required\n                (click)=\"cv.click()\"\n                formControlName=\"cv\"\n            />\n            <mat-icon matSuffix>folder</mat-icon>\n        </mat-form-field>\n        <input\n            type=\"file\"\n            formControlName=\"cv\"\n            #cv\n            required\n            accept=\"image/jpeg,image/gif,image/png,application/pdf, .doc, .docx\"\n            style=\"display: none;\"\n            (change)=\"onFileChange($event)\"\n        />\n        <mat-error *ngIf=\"size > 2e6\">File size is more than 2MB.</mat-error>\n    </div>\n\n    <div>\n        <mat-form-field class=\"file\">\n            <mat-label>Cover Letter:</mat-label>\n            <input\n                matInput\n                class=\"file-names\"\n                [value]=\"upload_docs.get('coverLetter').value\"\n                readonly\n                (click)=\"coverLetter.click()\"\n            />\n            <mat-icon\n                matSuffix\n                class=\"delete\"\n                *ngIf=\"coverLetter_cancel == false\"\n                (click)=\"coverLetterCancel()\"\n                >cancel</mat-icon\n            >\n            <mat-icon matSuffix>folder</mat-icon>\n        </mat-form-field>\n        <input\n            type=\"file\"\n            #coverLetter\n            accept=\"image/jpeg,image/gif,image/png,application/pdf, .doc, .docx\"\n            style=\"display: none;\"\n            (change)=\"onFileChange2($event)\"\n            formControlName=\"coverLetter\"\n        />\n        <mat-error *ngIf=\"size2 > 2e6\">File size is more than 2MB.</mat-error>\n    </div>\n\n    <div formArrayName=\"degreeDocs\">\n        <div\n            *ngFor=\"\n                let degreeDocs of upload.allForm.get([\n                    'upload_docs',\n                    'degreeDocs'\n                ])['controls'];\n                let i = index\n            \"\n            [formGroupName]=\"i\"\n        >\n            <mat-form-field class=\"file\">\n                <mat-label\n                    >{{\n                        upload.allForm.get([\"edu_info\", i, \"level\"]).value +\n                            \"\\t\" +\n                            upload.allForm.get([\"edu_info\", i, \"degree\"]).value\n                    }}\n                    Qualification</mat-label\n                >\n                <input\n                    matInput\n                    class=\"file-names\"\n                    [value]=\"upload_docs.get(['degreeDocs', i, 'docs']).value\"\n                    readonly\n                    required\n                    (click)=\"docs.click()\"\n                    formControlName=\"docs\"\n                />\n                <mat-icon matSuffix>folder</mat-icon>\n            </mat-form-field>\n            <input\n                type=\"file\"\n                #docs\n                required\n                accept=\"image/jpeg,image/gif,image/png,application/pdf, .doc, .docx\"\n                style=\"display: none;\"\n                (change)=\"uploadService.onFileChange3($event, i)\"\n                formControlName=\"docs\"\n            />\n            <mat-error *ngIf=\"uploadService.size3[i] > 2e6\"\n                >File size is more than 2MB.</mat-error\n            >\n        </div>\n    </div>\n\n    <div>\n        <mat-form-field class=\"file\">\n            <mat-label>Other documents (more than one file):</mat-label>\n            <input\n                matInput\n                class=\"file-names\"\n                [value]=\"names\"\n                readonly\n                (click)=\"other.click()\"\n                formConrtolName=\"other\"\n            />\n            <mat-icon\n                matSuffix\n                class=\"delete\"\n                *ngIf=\"cancel == false\"\n                (click)=\"otherCancel()\"\n                >cancel</mat-icon\n            >\n            <mat-icon matSuffix>folder</mat-icon>\n        </mat-form-field>\n        <input\n            type=\"file\"\n            #other\n            style=\"display: none;\"\n            multiple\n            accept=\"image/jpeg,image/gif,image/png,application/pdf, .doc, .docx\"\n            (change)=\"onFileChange4($event); fileEvent($event)\"\n            formControlName=\"other\"\n        />\n        <mat-error *ngIf=\"size4 > 2e6\"\n            >One of the file(s) is more than 2MB size.</mat-error\n        >\n    </div>\n\n    <div style=\"padding-top: 2mm;\">\n        <mat-checkbox\n            #checkTermsCons\n            unchecked\n            (change)=\"agreement(checkTermsCons)\"\n            [style.color]=\"color\"\n            >I am 18 years of age or older and I agree with the\n            <u (click)=\"termsCons()\" class=\"alert-link\">Terms and Conditions</u\n            >.\n        </mat-checkbox>\n    </div>\n\n    <div>\n        <button\n            mat-raised-button\n            matStepperPrevious\n            class=\"bksub\"\n            color=\"accent\"\n        >\n            Back\n        </button>\n        <button mat-raised-button type=\"submit\" class=\"bksub\" color=\"warn\">\n            Submit\n        </button>\n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CenterService } from './center.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadService {\n    constructor(private center: CenterService) {}\n\n    files3: string[] = [];\n    size3: number[] = [0];\n    onFileChange3(event: { target: { files: string | any[] } }, i: number) {\n        this.size3[i] = event.target.files[0].size;\n        if (this.size3[i] > 2e6) {\n            this.center.allForm\n                .get(['upload_docs', 'degreeDocs', i, 'docs'])\n                .setValue('');\n        } else {\n            this.files3.splice(i, 1, event.target.files[0]);\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\n\nimport { CenterService } from '../center.service';\n\n@Component({\n    selector: 'app-work-information',\n    templateUrl: './work-information.component.html',\n    styleUrls: ['./work-information.component.css'],\n})\nexport class WorkInformationComponent implements OnInit {\n    constructor(private fb: FormBuilder, private work: CenterService) {}\n\n    work_info: FormArray;\n    allForm: FormGroup;\n\n    ngOnInit(): void {\n        this.work_info = this.fb.array([this.createWork()]),\n        this.work.allForm.addControl('work_info', this.work_info);\n        this.allForm = this.work.allForm as FormGroup;\n    }\n\n    private createWork(): FormGroup {\n        return this.fb.group({\n            company: ['', [\n                Validators.required,\n                Validators.maxLength(100),\n            ]],\n            occupation: ['', Validators.required],\n            startDate: ['', Validators.required], // 2017-03-01\n            stillInCharge: [false],\n            endDate: ['', Validators.required],\n        });\n    }\n\n    show: boolean = true;\n    checkWork(): boolean {\n        if (this.show == false) {\n            this.work_info.clear();\n        }\n        else {\n            this.work_info.push(this.createWork());\n        }\n        return this.show;\n    }\n\n    addWork() {\n        this.work_info.push(this.createWork());\n    }\n\n    removeWork(i: number) {\n        this.work_info.removeAt(i);\n    }\n\n    chk: Array<boolean> = [];\n    stillWorking(i: number) {\n        if (this.work_info.get([i, 'stillInCharge']).value=='true') {\n            this.work_info.get([i, 'stillInCharge']).setValue('false');\n        } else {\n            this.work_info.get([i, 'stillInCharge']).setValue('true');\n            this.work_info.get([i, 'endDate']).setValue('null');\n        }\n        return this.chk[i] = this.work_info.get([i, 'stillInCharge']).value;\n    }\n}\n","<form [formGroup]=\"allForm\">\n    <h5>Enter your work history (if applicable):</h5>\n    <mat-checkbox [(ngModel)]='show' [ngModelOptions]=\"{standalone: true}\" (change)=\"checkWork()\"\n        >I have relevant work experience.</mat-checkbox\n    >\n    <hr width=\"500px\" align=\"left\"/>\n\n    <div formArrayName=\"work_info\" *ngIf=\"show\">\n        <div\n            *ngFor=\"let work_infos of work_info['controls']; let i = index\"\n            [formGroupName]=\"i\"\n        >\n            <div class=\"border-blue border-danger\">\n                <h6 *ngIf=\"i == 0; else nextWork\">Your latest job:</h6>\n                <mat-form-field class=\"comOccu\">\n                    <mat-label>Company:</mat-label>\n                    <input matInput formControlName=\"company\" required />\n                </mat-form-field>\n            </div>\n\n            <div>\n                <mat-form-field class=\"comOccu\">\n                    <mat-label>Occupation:</mat-label>\n                    <input matInput formControlName=\"occupation\" required />\n                </mat-form-field>\n            </div>\n\n            <mat-form-field>\n                <mat-label>From:</mat-label>\n                <input\n                    matInput\n                    type=\"date\"\n                    formControlName=\"startDate\"\n                    required\n                />\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"chk[i] != 'true'\" class=\"scndry\">\n                <mat-label>To:</mat-label>\n                <input\n                    matInput\n                    type=\"date\"\n                    formControlName=\"endDate\"\n                    required\n                />\n            </mat-form-field>\n\n            <mat-checkbox class=\"scndry\" (change)=\"stillWorking(i)\"\n                >still in charge\n            </mat-checkbox>\n\n            <div *ngIf=\"i !== 0\">\n                <button\n                    mat-stroked-button\n                    matStepper\n                    (click)=\"removeWork(i)\"\n                    color=\"accent\"\n                >\n                    - Remove work history\n                </button>\n            </div>\n        </div>\n\n        <div>\n            <button\n                mat-stroked-button\n                matStepper\n                (click)=\"addWork()\"\n                color=\"primary\"\n            >\n                + Add work history\n            </button>\n        </div>\n\n        <ng-template #nextWork>\n            <hr width=\"500px\" align=\"left\" />\n            <h6 #nextDegree>Next work history:</h6>\n        </ng-template>\n    </div>\n    <div>\n        <button mat-raised-button matStepperPrevious color=\"accent\">\n            Back\n        </button>\n        <button mat-raised-button matStepperNext color=\"primary\">\n            Next\n        </button>\n    </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyD309EOFWaIE15xW_EuNhqsRLSHV0l6b8c\",\n    authDomain: \"job-app-5fa28.firebaseapp.com\",\n    databaseURL: \"https://job-app-5fa28.firebaseio.com\",\n    projectId: \"job-app-5fa28\",\n    storageBucket: \"job-app-5fa28.appspot.com\",\n    messagingSenderId: \"601933996448\",\n    appId: \"1:601933996448:web:5ab2c25e46c55d95ff84c5\",\n    measurementId: \"G-EV8PBCZ931\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\n// <!-- The core Firebase JS SDK is always required and must be listed first -->\n// <script src=\"https://www.gstatic.com/firebasejs/7.19.0/firebase-app.js\"></script>\n\n// <!-- TODO: Add SDKs for Firebase products that you want to use\n//      https://firebase.google.com/docs/web/setup#available-libraries -->\n// <script src=\"https://www.gstatic.com/firebasejs/7.19.0/firebase-analytics.js\"></script>\n\n// <script>\n//   // Your web app's Firebase configuration\n//   var firebaseConfig = {\n//     apiKey: \"AIzaSyD309EOFWaIE15xW_EuNhqsRLSHV0l6b8c\",\n//     authDomain: \"job-app-5fa28.firebaseapp.com\",\n//     databaseURL: \"https://job-app-5fa28.firebaseio.com\",\n//     projectId: \"job-app-5fa28\",\n//     storageBucket: \"job-app-5fa28.appspot.com\",\n//     messagingSenderId: \"601933996448\",\n//     appId: \"1:601933996448:web:5ab2c25e46c55d95ff84c5\",\n//     measurementId: \"G-EV8PBCZ931\"\n//   };\n//   // Initialize Firebase\n//   firebase.initializeApp(firebaseConfig);\n//   firebase.analytics();\n// </script>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}